/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Absensi, AbsensiInterface } from "../Absensi";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MahasiswaNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyForOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mahasiswa",
        type: "address",
      },
      {
        internalType: "string",
        name: "_nim",
        type: "string",
      },
      {
        internalType: "string",
        name: "_nama",
        type: "string",
      },
    ],
    name: "addMahasiswa",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mahasiswa",
        type: "address",
      },
    ],
    name: "getNamaMahasiswa",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mahasiswa",
        type: "address",
      },
    ],
    name: "getNimMahasiswa",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mahasiswa",
    outputs: [
      {
        internalType: "string",
        name: "nim",
        type: "string",
      },
      {
        internalType: "string",
        name: "nama",
        type: "string",
      },
      {
        internalType: "bool",
        name: "exist",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561078e806100326000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806338b14a031461005c5780633d4311f81461008557806386848c5b1461009a5780638da5cb5b146100ad5780638e905757146100d8575b600080fd5b61006f61006a366004610445565b6100fa565b60405161007c91906104ad565b60405180910390f35b610098610093366004610563565b6101eb565b005b61006f6100a8366004610445565b61028c565b6000546100c0906001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b6100eb6100e6366004610445565b6102f4565b60405161007c939291906105d7565b6001600160a01b03811660009081526001602052604081206002015460609160ff9091161515900361013f57604051634451250f60e11b815260040160405180910390fd5b6001600160a01b03821660009081526001602081905260409091200180546101669061060f565b80601f01602080910402602001604051908101604052809291908181526020018280546101929061060f565b80156101df5780601f106101b4576101008083540402835291602001916101df565b820191906000526020600020905b8154815290600101906020018083116101c257829003601f168201915b50505050509050919050565b6000546001600160a01b03163314610216576040516317a7bee360e11b815260040160405180910390fd5b60408051606081018252838152602080820184905260018284018190526001600160a01b0387166000908152915291909120815181906102569082610698565b506020820151600182019061026b9082610698565b50604091909101516002909101805460ff1916911515919091179055505050565b6001600160a01b03811660009081526001602052604081206002015460609160ff909116151590036102d157604051634451250f60e11b815260040160405180910390fd5b6001600160a01b038216600090815260016020526040902080546101669061060f565b60016020526000908152604090208054819061030f9061060f565b80601f016020809104026020016040519081016040528092919081815260200182805461033b9061060f565b80156103885780601f1061035d57610100808354040283529160200191610388565b820191906000526020600020905b81548152906001019060200180831161036b57829003601f168201915b50505050509080600101805461039d9061060f565b80601f01602080910402602001604051908101604052809291908181526020018280546103c99061060f565b80156104165780601f106103eb57610100808354040283529160200191610416565b820191906000526020600020905b8154815290600101906020018083116103f957829003601f168201915b5050506002909301549192505060ff1683565b80356001600160a01b038116811461044057600080fd5b919050565b60006020828403121561045757600080fd5b61046082610429565b9392505050565b6000815180845260005b8181101561048d57602081850181015186830182015201610471565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006104606020830184610467565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126104e757600080fd5b813567ffffffffffffffff80821115610502576105026104c0565b604051601f8301601f19908116603f0116810190828211818310171561052a5761052a6104c0565b8160405283815286602085880101111561054357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561057857600080fd5b61058184610429565b9250602084013567ffffffffffffffff8082111561059e57600080fd5b6105aa878388016104d6565b935060408601359150808211156105c057600080fd5b506105cd868287016104d6565b9150509250925092565b6060815260006105ea6060830186610467565b82810360208401526105fc8186610467565b9150508215156040830152949350505050565b600181811c9082168061062357607f821691505b60208210810361064357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561069357600081815260208120601f850160051c810160208610156106705750805b601f850160051c820191505b8181101561068f5782815560010161067c565b5050505b505050565b815167ffffffffffffffff8111156106b2576106b26104c0565b6106c6816106c0845461060f565b84610649565b602080601f8311600181146106fb57600084156106e35750858301515b600019600386901b1c1916600185901b17855561068f565b600085815260208120601f198616915b8281101561072a5788860151825594840194600190910190840161070b565b50858210156107485787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220207f5b7d2b85ad329abdf6fbdc531829f9b3f4825d8abb3882ab1b71699fd6eb64736f6c63430008120033";

type AbsensiConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AbsensiConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Absensi__factory extends ContractFactory {
  constructor(...args: AbsensiConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Absensi> {
    return super.deploy(overrides || {}) as Promise<Absensi>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Absensi {
    return super.attach(address) as Absensi;
  }
  override connect(signer: Signer): Absensi__factory {
    return super.connect(signer) as Absensi__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AbsensiInterface {
    return new utils.Interface(_abi) as AbsensiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Absensi {
    return new Contract(address, _abi, signerOrProvider) as Absensi;
  }
}
