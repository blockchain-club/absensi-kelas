/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Absensi, AbsensiInterface } from "../Absensi";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MahasiswaNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyForOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "mahasiswa",
        type: "address",
      },
    ],
    name: "MahasiswaAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mahasiswa",
        type: "address",
      },
      {
        internalType: "string",
        name: "_nim",
        type: "string",
      },
      {
        internalType: "string",
        name: "_nama",
        type: "string",
      },
    ],
    name: "addMahasiswa",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mahasiswa",
        type: "address",
      },
    ],
    name: "getNamaMahasiswa",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mahasiswa",
        type: "address",
      },
    ],
    name: "getNimMahasiswa",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mahasiswa",
    outputs: [
      {
        internalType: "string",
        name: "nim",
        type: "string",
      },
      {
        internalType: "string",
        name: "nama",
        type: "string",
      },
      {
        internalType: "bool",
        name: "exist",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916331790556107c8806100326000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806338b14a031461005c5780633d4311f81461008557806386848c5b1461009a5780638da5cb5b146100ad5780638e905757146100d8575b600080fd5b61006f61006a36600461047f565b6100fa565b60405161007c91906104e7565b60405180910390f35b61009861009336600461059d565b6101eb565b005b61006f6100a836600461047f565b6102c6565b6000546100c0906001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b6100eb6100e636600461047f565b61032e565b60405161007c93929190610611565b6001600160a01b03811660009081526001602052604081206002015460609160ff9091161515900361013f57604051634451250f60e11b815260040160405180910390fd5b6001600160a01b038216600090815260016020819052604090912001805461016690610649565b80601f016020809104026020016040519081016040528092919081815260200182805461019290610649565b80156101df5780601f106101b4576101008083540402835291602001916101df565b820191906000526020600020905b8154815290600101906020018083116101c257829003601f168201915b50505050509050919050565b6000546001600160a01b03163314610216576040516317a7bee360e11b815260040160405180910390fd5b60408051606081018252838152602080820184905260018284018190526001600160a01b03871660009081529152919091208151819061025690826106d2565b506020820151600182019061026b90826106d2565b50604091820151600291909101805460ff1916911515919091179055516001600160a01b03841681527f67b31359d8ac89ce1a719d4adf33de478ccd1aefcd46fdd2b4716bd8d111b0ef9060200160405180910390a1505050565b6001600160a01b03811660009081526001602052604081206002015460609160ff9091161515900361030b57604051634451250f60e11b815260040160405180910390fd5b6001600160a01b0382166000908152600160205260409020805461016690610649565b60016020526000908152604090208054819061034990610649565b80601f016020809104026020016040519081016040528092919081815260200182805461037590610649565b80156103c25780601f10610397576101008083540402835291602001916103c2565b820191906000526020600020905b8154815290600101906020018083116103a557829003601f168201915b5050505050908060010180546103d790610649565b80601f016020809104026020016040519081016040528092919081815260200182805461040390610649565b80156104505780601f1061042557610100808354040283529160200191610450565b820191906000526020600020905b81548152906001019060200180831161043357829003601f168201915b5050506002909301549192505060ff1683565b80356001600160a01b038116811461047a57600080fd5b919050565b60006020828403121561049157600080fd5b61049a82610463565b9392505050565b6000815180845260005b818110156104c7576020818501810151868301820152016104ab565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061049a60208301846104a1565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261052157600080fd5b813567ffffffffffffffff8082111561053c5761053c6104fa565b604051601f8301601f19908116603f01168101908282118183101715610564576105646104fa565b8160405283815286602085880101111561057d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156105b257600080fd5b6105bb84610463565b9250602084013567ffffffffffffffff808211156105d857600080fd5b6105e487838801610510565b935060408601359150808211156105fa57600080fd5b5061060786828701610510565b9150509250925092565b60608152600061062460608301866104a1565b828103602084015261063681866104a1565b9150508215156040830152949350505050565b600181811c9082168061065d57607f821691505b60208210810361067d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156106cd57600081815260208120601f850160051c810160208610156106aa5750805b601f850160051c820191505b818110156106c9578281556001016106b6565b5050505b505050565b815167ffffffffffffffff8111156106ec576106ec6104fa565b610700816106fa8454610649565b84610683565b602080601f831160018114610735576000841561071d5750858301515b600019600386901b1c1916600185901b1785556106c9565b600085815260208120601f198616915b8281101561076457888601518255948401946001909101908401610745565b50858210156107825787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220ba1f907e5a14190c93c9e8e1951704a3074929aef443815d0d5fb3f28ed5c59564736f6c63430008120033";

type AbsensiConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AbsensiConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Absensi__factory extends ContractFactory {
  constructor(...args: AbsensiConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Absensi> {
    return super.deploy(overrides || {}) as Promise<Absensi>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Absensi {
    return super.attach(address) as Absensi;
  }
  override connect(signer: Signer): Absensi__factory {
    return super.connect(signer) as Absensi__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AbsensiInterface {
    return new utils.Interface(_abi) as AbsensiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Absensi {
    return new Contract(address, _abi, signerOrProvider) as Absensi;
  }
}
